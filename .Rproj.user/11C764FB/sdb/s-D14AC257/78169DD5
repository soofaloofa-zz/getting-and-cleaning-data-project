{
    "contents" : "# This script reads the activity data from the UCI HAR Dataset and, for\n# each test subject and activity, outputs the mean of the measurements made.\n\nlibrary(dplyr)\n\n# 1. Merge the training and the test sets to create one data set.\n# 4. Appropriately label the data set with descriptive variable names.\n\n# Extract the feature names\nfeatureNames <- read.table('./UCI HAR Dataset/features.txt')[,2]\n\n# Load and merge the training and test features\nfeatureNames <- read.table('./UCI HAR Dataset/features.txt')[,2]\ntrainFeatures <- read.table('./UCI HAR Dataset/train/X_train.txt', col.names=featureNames)\ntestFeatures <- read.table('./UCI HAR Dataset/test/X_test.txt', col.names=featureNames)\nfeatures <- rbind(trainFeatures, testFeatures)\n\n# 2. Extract only the measurements on the mean and standard deviation for each measurement.\n\n# Use grep to extract only the mean and standard deviation columns from the feature names.\nusedFeatures <- grep('mean|std', featureNames, ignore.case=TRUE)\nfeatures <- features[,usedFeatures]\n\n# 3. Use descriptive activity names to name the activities in the data set.\n\n# Add the training and test subjects to the data set\ntrainSubjectIndex <- read.table('./UCI HAR Dataset/train/subject_train.txt', col.names='Subject.Index')\ntestSubjectIndex <- read.table('./UCI HAR Dataset/test/subject_test.txt', col.names='Subject.Index')\nsubjects <- rbind(trainSubjectIndex, testSubjectIndex)\nfeatures <- cbind(subjects, features)\n\n# Read the activity indices for the training and test data\ntrainActivityIndex <- read.table('./UCI HAR Dataset/train/y_train.txt', col.names='Activity.Index')\ntestActivityIndex <- read.table('./UCI HAR Dataset/test/y_test.txt', col.names='Activity.Index')\nactivities <- rbind(trainActivityIndex, testActivityIndex)\n\n# Merge the labels with the indices, applying an index to the data to maintain\n# the correct sort order after merging\nactivityLabels <- read.table('./UCI HAR Dataset/activity_labels.txt', col.names=c('Activity.Index', 'Activity.Label'))\nactivities$id <- 1:nrow(activities)  # Apply an index to the data\nactivities <- merge(activityLabels, activities)\nactivities <- activities[order(activities$id), ]\n\n# Add the activity labels to the data set\nfeatures <- cbind(activities$Activity.Label, features)\ncolnames(features)[1] <- \"Activity.Label\" \n\n# 5. Create a second, independent tidy data set with the average of each variable for each activity and each subject.\ngrouped <- group_by(features, Activity.Label, Subject.Index)\nsummarized <- summarise_each(grouped, funs(mean))\n\n# Write the output to a file\nwrite.table(summarized, row.name=F, file='./output.txt')\n",
    "created" : 1414119627990.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "383674227",
    "id" : "78169DD5",
    "lastKnownWriteTime" : 1414240717,
    "path" : "~/Documents/Coursera/Getting and Cleaning Data/Project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}