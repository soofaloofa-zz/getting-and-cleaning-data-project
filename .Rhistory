download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'hid.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv', 'hid.csv', 'curl')
data <- read.csv('hid.csv')
summary(data)
head(data)
str(data)
data$ACR
data$AGS
agricultureLogical <- data[data$ACR = 3 & data$AGS = 6]
agricultureLogical <- data[data$ACR = 3 & data$AGS = 6,]
agricultureLogical <- data[data$ACR == 3 & data$AGS == 6,]
head(agricultureLogical)
tail(agricultureLogical)
View(agricultureLogical)
agricultureLogical <- data$ACR == 3 & data$AGS == 6
agricultureLogical
which(agricultureLogical)
?which
library(jpeg)
package.install('jpeg')
install.packages('jpeg')
?jpeg
jpeg('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg', 'jeff.jpg', 'curl')
jpeg('jeff.jpg')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'GDP.csv')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv', 'GDP.csv', 'curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv', 'FED.csv', 'curl')
gdp <- read.csv('GDP.csv')
educ <- read.csv('FED.csv')
head(gdp)
tail(gdp)
?merge
merge(gdp, educ, by="")
gdp <- read.csv('')
?read.csv
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrow=231)
View(gdp)
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrow=195)
View(gdp)
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrow=220)
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrows=220)
View(gdp)
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrows=215)
View(gdp)
names(gdp) <- c("CountryCode")
names(gdp)
View(educ)
?merge
matched(gdp, educ, by="CountryCode")
matched <- merge(gdp, educ, by="CountryCode")
View(matched)
arrange
library(dplyr)
arrange(matched)
?arrange
names(gdp) <- c("CountryCode", "Rank", "NA", "")
names(gdp) <- c("CountryCode", "Rank", "NA", "CountryName", "GDP")
gdp
gdp <- gdp[,colSums(is.na(gdp)) != nrow(gdp)]
View(gdp)
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrows=195)
View(gdp)
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrows=190)
View(gdp)
gdp <- gdp[,colSums(is.na(gdp)) != nrow(gdp)]
View(gdp)
names(gdp) <- c("CountryCode", "Rank", "CountryName", "GDP")
gdp[[6]]
gdp[[5]]
gdp[[5]] <- NULL
gdp
View(gdp)
?as.numeric
gdb$GDP <- as.numeric(gdp$GDP)
gdp$GDP <- as.numeric(gdp$GDP)
View(gdp)
names(gdp) <- c("CountryCode", "Rank", "CountryName", "GDP")
gdp <- read.csv('GDP.csv', header=FALSE, skip=5, nrows=190)
names(gdp) <- c("CountryCode", "Rank", "CountryName", "GDP")
gdp
gdp <- gdp[,colSums(is.na(gdp)) != nrow(gdp)]
View(gdp)
gdp[[5]] <- NULL
gdp
?as.numeric
as.numeric("1,134")
View(gdp)
names(gdp) <- c("CountryCode", "Rank", "CountryName", "GDP")
View(gdp)
str(gdp)
matched <- merge(gdp, educ, by="CountryCode")
View(matched)
arrange(matched, Rank)
arranged <- arrange(matched, Rank)
View(arranged)
?arrange
arranged <- arrange(matched, desc(Rank))
View(arranged)
View(arranged)
high <- arranged[arranged$Income.Group="High income: nonOECD",]
high <- arranged[arranged$Income.Group =="High income: nonOECD",]
View(high)
highnon <- high
View(highnon)
mean(highnon$Rank)
?cut
cut(gdp, 5)
cut(gdp, c(5)
)
cut(gdp$Rank, c(5)
)
matched
?cut
cut(gdp$Rank, 5)
cut.rank <- cut(matched$Rank, 5)
cut.rank
?jpeg
jpeg('jeff.jpg', native=TRUE)
?readJPEG
library(jpeg)
jeff <- readJPEG('jeff.jpg', native=T)
summary(jeff)
quantile(jeff)
?quantile
quantile(jeff, probs=seq(0, 30, 80, 100))
quantile(jeff, probs=seq(0, 30, 80))
quantile(jeff, probs=seq(30, 80))
quantile(jeff, probs=seq(.3, .8))
quantile(jeff, probs=seq(.8))
q <- quantile(matched$Rank)
q
ind < cut(matched$Rank, q, include.lowest = T)
ind <- cut(matched$Rank, q, include.lowest = T)
ind
ind
str(ind)
?split
s <- split(matched, ind)
str(s)
highest <- s[4]
highest
highest <- highest[[1]]
View(highest)
highest <- s[[0]]
highest <- s[0]
highest <- s[[1]]
View(highest)
count(hi)
sum(highest$Income.Group == 'Lower middle income')
clear()
clear
